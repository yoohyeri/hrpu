package com.mobilusauto.app.productionprocess;

import java.io.IOException;
import java.util.*;

import com.mobilusauto.app.productionprocess.R;

import android.app.*;
import android.bluetooth.BluetoothA2dp;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothProfile;
import android.bluetooth.BluetoothProfile.ServiceListener;
import android.content.*;
import android.content.res.AssetFileDescriptor;
import android.graphics.Color;
import android.media.*;
import android.media.AudioManager.OnAudioFocusChangeListener;
import android.media.MediaRecorder.AudioSource;
import android.os.*;
import android.text.Html;
import android.util.Log;
import android.view.*;
import android.view.View.*;
import android.widget.*;
import android.widget.RelativeLayout.*;
import android.graphics.PorterDuff;
import android.media.MediaPlayer.OnCompletionListener;
import android.net.Uri;


public class AudioActivity extends Activity implements OnClickListener{
	private TextView mTitle;
	private Button mResultOK, mResultNG;
	private int mIndex;
	
	private MediaPlayer mp = new MediaPlayer();
	private int currentPosition = 0; 

	private TextView mFileName;
	private Button	mAudioPath;
	
	private boolean mIsAudioGain = false;
	private AudioManager mAudioManager;
	
	private IMTX mIHMS = IMTX.Stub.asInterface(ServiceManager.getService("motrex"));

	private String[] mPlayFileName = {"1Khz Stereo"};
	private int[]	mPlayFileRes = {R.raw.sound_file1};
	
	Handler mHandler = new Handler();
	private final int SOUND_DELEY = 200;
	private int mSound;
	private int SOUND_MAX;
	
	private boolean mIsCARMode = false;
	
	private IntentFilter mIntentfilter; 
	private BroadcastReceiver mReceiver;
	public final int AUDIO_HEADPHONE			= 0;
	public final int AUDIO_BLUETOOTH_HEADPHONE	= 1;
	public final int AUDIO_CAR					= 2;
	public final int AUDIO_MEDIA_BOX			= 3;
	
	TextView mTV_arrow, mTV_arrow_txt;
	
	public boolean mIsAlive = false;
	
	TextView mTV_Count;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_audio);

		mIndex = getIntent().getIntExtra("_key", 0);
		String[] _str = getResources().getStringArray(R.array.arListTitle);
		
		View _view = (View) findViewById(R.id.top);
		
		mTitle = (TextView) _view.findViewById(R.id.tv_title);
		mTitle.setText(_str[mIndex]);
		
		mResultOK = (Button) _view.findViewById(R.id.bt_result_ok);
		mResultOK.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				MainActivity.getInstace().mSetResult(mIndex, MD_DEFINE.RESULT_OK);
				//onBackPressed();
				finish();
			}
		});
		
		mResultNG = (Button) _view.findViewById(R.id.bt_result_ng);
		mResultNG.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				MainActivity.getInstace().mSetResult(mIndex, MD_DEFINE.RESULT_NG);
				//onBackPressed();
				finish();
			}
		});
		((TextView)_view.findViewById(R.id.tv_body)).setText(R.string.str_audio_body);
		((TextView)_view.findViewById(R.id.tv_body1)).setVisibility(View.VISIBLE);
		if(MainActivity.getInstace().mGetName().equals(_DEFINE.NAME_CHEONAN))
			((TextView)_view.findViewById(R.id.tv_body1)).setText(R.string.str_audio_body_cheonan);
		else
			((TextView)_view.findViewById(R.id.tv_body1)).setText(R.string.str_audio_body_mg);
		
		
		//----------------------------------
		mAudioManager = (AudioManager)getSystemService(Context.AUDIO_SERVICE);
		
		mFileName = (TextView) findViewById(R.id.tv_play_name);

		mAudioPath = (Button) findViewById(R.id.btn_audio);
		mAudioPath.setOnClickListener(this);
		
		mp.setOnCompletionListener(new OnCompletionListener() {
			@Override
			public void onCompletion(MediaPlayer arg0) {
				// TODO Auto-generated method stub
				currentPosition += 1;
				if(currentPosition >= mPlayFileName.length) {
					currentPosition = 0;
				}
				PlayFile(currentPosition);
			}
		});
		
		mIntentfilter = new IntentFilter(); 
		mIntentfilter.addAction("android.hmsintent.action.AUDIO_PATH_FOR_MENU");
		mReceiver = new BroadcastReceiver() {
			@Override
			public void onReceive(Context arg0, Intent arg1) {
				// TODO Auto-generated method stub
				new Handler().postDelayed(new Runnable() {
					@Override
					public void run() {
						// TODO Auto-generated method stub
						if(mIsAlive) {
							mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, _DEFINE.SOUND_MAX_LEVEL, 0);
							mUpdateDisplay(SystemProperties.getInt(_DEFINE.PERSIST_AUDIO_PATH, 0));
						}
					}
				}, 1000);
			}
		};
		
		mTV_arrow = (TextView)findViewById(R.id.tv_arrow); 
		mTV_arrow_txt = (TextView)findViewById(R.id.tv_arrow_txt);
		
		mTV_Count = (TextView) findViewById(R.id.tv_count);
	}
	
	private void PlayFile(int _index) {
		try {
			mp.reset();
			
			AssetFileDescriptor afd = getResources().openRawResourceFd( mPlayFileRes[_index]);
			if(afd != null){
				mp.setDataSource(afd.getFileDescriptor(), afd.getStartOffset(), afd.getLength());
				afd.close();
			}
			mp.prepare();
			mp.start();
			
			mFileName.setText(mPlayFileName[_index]);
			mSound = 0;
			mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, mSound, 0);
			mHandler.removeCallbacks(mRunnable);
			mHandler.postDelayed(mRunnable, SOUND_DELEY);
		} catch (IllegalArgumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalStateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	Runnable mRunnable = new Runnable() {
		@Override
		public void run() {
			// TODO Auto-generated method stub
			mSound += 1;
			if(mSound <= SOUND_MAX) {
				mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, mSound, 0);
				mHandler.postDelayed(mRunnable, SOUND_DELEY);
				mTV_Count.setText(String.valueOf(mSound));
			}
		}
	};
	
	private void mSetServicePath(int _id) 
	{
//		try {
//			mIHMS.setMultimediaPath(_id);
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
	}
	
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		mIsAlive = true;
		
		mHandlerOKEnable.postDelayed(mRunnableOKEnable, _DEFINE.OK_ENABLE_TIME);
		
		registerReceiver(mReceiver, mIntentfilter);
		
		mSound = 0;
		SOUND_MAX = mAudioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC);
		
		
		if(!mIsAudioGain) {
			mAudioManager.requestAudioFocus(mOnAudioFocusChangeListener,
					AudioManager.STREAM_MUSIC, 
					AudioManager.AUDIOFOCUS_GAIN);
			mIsAudioGain = true;
//			mSetServicePath(HMSIndex.MULTIMEDIA_PATH_AV);
		}
		
		currentPosition = 0;
		PlayFile(currentPosition);
		
		mSetServicePath(HMSIndex.MULTIMEDIA_PATH_CPU);
		
		mResultOK.setEnabled(false);
		mIsCARMode = false;
		mAudioPath.setText(R.string.str_hp_audio);
//		try {
//			mIHMS.setAudioOutAux(mIsCARMode);
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		
		mUpdateDisplay(SystemProperties.getInt(_DEFINE.PERSIST_AUDIO_PATH, 0));
		
		CreateListItem();
		
		super.onResume();
	}
	
	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		mIsAlive = false;
		
		unregisterReceiver(mReceiver);
		
		if(mIsAudioGain) {
//			mSetServicePath(HMSIndex.MULTIMEDIA_PATH_CPU);
			
			mIsAudioGain = false;			
			mAudioManager.unregisterAudioFocusListener(mOnAudioFocusChangeListener);
		}
		
		mp.stop();
		mp.release(); 
		mp = null;
		mHandler.removeCallbacks(mRunnable);
		
		mIsCARMode = false;
//		try {
//			mIHMS.setAudioOutAux(mIsCARMode);
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}

		super.onPause();
	}
	
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
	//	super.onBackPressed();
	}
	
	@Override
	public void onClick(View arg0) {
		// TODO Auto-generated method stub
//		if(arg0.getId() == R.id.btn_audio) {
//			try {
//				mIHMS.setAudioOutAux(!mIsCARMode);
//			} catch (RemoteException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
	}
	
	private void mUpdateDisplay(int _val) {
		if(_val == AUDIO_MEDIA_BOX) {
			mTV_arrow_txt.setTextColor(_DEFINE.mYellowGreen); 
			mTV_arrow.setBackgroundResource(R.drawable.arrow_red);
		} else {
			mTV_arrow_txt.setTextColor(_DEFINE.mWhile); 
			mTV_arrow.setBackgroundResource(R.drawable.arrow_white);
		}
		
		if(_val == AUDIO_CAR) {
			mIsCARMode = true;
			mAudioPath.setText(R.string.str_aux_audio);
			mResultOK.setEnabled(true);
		} else {
			mIsCARMode = false;
			mAudioPath.setText(R.string.str_hp_audio);
		}
	}
	
	private OnAudioFocusChangeListener mOnAudioFocusChangeListener = new OnAudioFocusChangeListener() {
		
		@Override
		public void onAudioFocusChange(int arg0) {
			// TODO Auto-generated method stub
			if(arg0 == AudioManager.AUDIOFOCUS_LOSS || arg0 == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT
					|| arg0 == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK) {
				mIsAudioGain = false;
				mAudioManager.unregisterAudioFocusListener(mOnAudioFocusChangeListener);
				
				setResult(RESULT_OK);
				//onBackPressed();
			} else if(arg0 == AudioManager.AUDIOFOCUS_GAIN || arg0 == AudioManager.AUDIOFOCUS_GAIN_TRANSIENT ||
					arg0 == AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK) {
			}
		}
	};
	
	Handler mHandlerOKEnable = new Handler();
	Runnable mRunnableOKEnable = new Runnable() {
		@Override
		public void run() {
			// TODO Auto-generated method stub
			mResultOK.setEnabled(true);
		}
	};
	
	private void CreateListItem() {
		if(SystemProperties.getBoolean(MAIN_APP.PROPERTIES_AUX_ENABLE, MAIN_APP._TRUE) == MAIN_APP._TRUE) {
			View _view = (View) findViewById(R.id.top);
			((TextView)_view.findViewById(R.id.tv_body)).setText(R.string.str_audio_body_aux);
			
			((TextView)_view.findViewById(R.id.tv_body2)).setVisibility(View.VISIBLE);
			if(MainActivity.getInstace().mGetName().equals(_DEFINE.NAME_CHEONAN))
				((TextView)_view.findViewById(R.id.tv_body2)).setText(R.string.str_audio_body_cheonan_aux);
			else
				((TextView)_view.findViewById(R.id.tv_body2)).setText(R.string.str_audio_body_mg_aux);
			
			
			((RelativeLayout)findViewById(R.id.rl_change)).setVisibility(View.VISIBLE);
		} else {
			mHandlerOKEnable.postDelayed(mRunnableOKEnable, _DEFINE.OK_ENABLE_TIME);
		}
	}
	
//	IHMSAudioOutPathCallback mAudioOutpath = new IHMSAudioOutPathCallback.Stub() {
//		@Override
//		public void onChangeAudioOutBT(boolean arg0) throws RemoteException {
//			// TODO Auto-generated method stub
//			Log.d("debug", "==========> onChangeAudioOutBT : " + arg0);
//			
//		}
//		
//		@Override
//		public void OnAudioOutState(int arg0) throws RemoteException {
//			// TODO Auto-generated method stub
//			Log.d("debug", "==========> OnAudioOutState : " + arg0);
//		}
//	};
}
