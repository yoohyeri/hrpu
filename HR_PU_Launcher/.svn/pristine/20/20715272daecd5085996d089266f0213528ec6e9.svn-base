package com.mobilusauto.app.productionprocess;

import java.util.*;

import com.mobilusauto.app.productionprocess.R;

import android.app.*;
import android.bluetooth.BluetoothA2dp;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothProfile;
import android.bluetooth.BluetoothProfile.ServiceListener;
import android.content.*;
import android.graphics.Color;
import android.media.*;
import android.media.AudioManager.OnAudioFocusChangeListener;
import android.media.MediaRecorder.AudioSource;
import android.os.*;
import android.text.Html;
import android.util.Log;
import android.view.*;
import android.view.View.*;
import android.widget.*;
import android.widget.RelativeLayout.*;
import android.graphics.PorterDuff;


public class DVDIFActivity extends Activity implements OnDVDProtocal{
	private TextView mTitle;
	private Button mResultOK, mResultNG;
	private int mIndex;
	
	private final String FILTER_GET_VERSION = "android.hmsintent.action.GET_VERSION";
	private final String FILTER_DVD_KEY = "android.hmsintent.action.KEY_STATE";
	
	TextView mTV_fw, mTV_deck;
	
	String mDVDFWVer, mDVDDeckVer;
	Handler mUpdateHandler = new Handler();
	Handler mRetryHandler = new Handler();
	int mRetryCount = 0, mReceive = 0;
	final int RETRY_MAX_COUNT = 20, RETRY_TIME = 500, RECEIVE_MAX_COUNT = 2;
	boolean mFWVersionSuccess = false, mDeckVersionSuccess = false;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_version);

		mIndex = getIntent().getIntExtra("_key", 0);
		String[] _str = getResources().getStringArray(R.array.arListTitle);
		
		View _view = (View) findViewById(R.id.top);
		
		mTitle = (TextView) _view.findViewById(R.id.tv_title);
		mTitle.setText(_str[mIndex]);
		
		mResultOK = (Button) _view.findViewById(R.id.bt_result_ok);
		mResultOK.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				MainActivity.getInstace().mSetResult(mIndex, MD_DEFINE.RESULT_OK);
//				onBackPressed();
				finish();
			}
		});
		mResultOK.setEnabled(false);
		
		mResultNG = (Button) _view.findViewById(R.id.bt_result_ng);
		mResultNG.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				MainActivity.getInstace().mSetResult(mIndex, MD_DEFINE.RESULT_NG);
//				onBackPressed();
				finish();
			}
		});
		String _msg = getString(R.string.str_dvd_if_body);
		_msg = _msg.replace("%s", SystemProperties.get("ro.product.fgcode", ""));
		((TextView)_view.findViewById(R.id.tv_body)).setText(_msg);
		mTV_fw = (TextView) findViewById(R.id.tv_ver);
		mTV_deck = (TextView) findViewById(R.id.tv_ver2);
		
//		TextView _ver = (TextView) findViewById(R.id.tv_ver);
//		String _msg = getString(R.string.str_dvd_fw_ver);
//		_msg = _msg.replace("%s", SystemProperties.get("hms.dvd.mcu.version", ""));
//		_ver.setText(_msg);
//		
//		TextView _ver2 = (TextView) findViewById(R.id.tv_ver2);
//		_msg = getString(R.string.str_dvd_deck_fw_ver);
//		_msg = _msg.replace("%s", SystemProperties.get("hms.dvd.deck.version", ""));
//		_ver2.setText(_msg);
//		_ver2.setVisibility(View.VISIBLE);
	}
	
	Runnable mUpdateRunnable = new Runnable() {
		@Override
		public void run() {
			// TODO Auto-generated method stub
			mUpdateVer();
		}
	};
	
	Runnable mRetryRunnable = new Runnable() {
		@Override
		public void run() {
			// TODO Auto-generated method stub
			
			mRetryCount += 1;
			mUpdateVer();
			if(mRetryCount < RETRY_MAX_COUNT) {
				mReceive = 0;
				MainActivity.getInstace().mGetDVDVersion();
				mRetryHandler.postDelayed(mRetryRunnable, RETRY_TIME);
			}
		}
	};
	
	private void mUpdateVer() {
		if(mFWVersionSuccess)	{
			mTV_fw.setText(mDVDFWVer);
		}
		else {
			String _str;
			_str = getString(R.string.str_dvd_fw_ver);
			if(mRetryCount == RETRY_MAX_COUNT) {
				_str = _str.replace("%s", getString(R.string.str_fail));
			} else if(mRetryCount >= 3) {
				if(mRetryCount % 3 == 0)		_str = _str.replace("%s", getString(R.string.str_wait1));
				else if(mRetryCount % 3 == 1)	_str = _str.replace("%s", getString(R.string.str_wait2));
				else if(mRetryCount % 3 == 2)	_str = _str.replace("%s", getString(R.string.str_wait3));
			} else {
				_str = mDVDFWVer;
			}
			mTV_fw.setText(_str);
		}
			
		if(mDeckVersionSuccess)	mTV_deck.setText(mDVDDeckVer);
		else {
			String _str;
			_str = getString(R.string.str_dvd_deck_fw_ver);
			if(mRetryCount == RETRY_MAX_COUNT) {
				_str = _str.replace("%s", getString(R.string.str_fail));
			}
			else if(mRetryCount >= 3) {
				if(mRetryCount % 3 == 0)		_str = _str.replace("%s", getString(R.string.str_wait1));
				else if(mRetryCount % 3 == 1)	_str = _str.replace("%s", getString(R.string.str_wait2));
				else if(mRetryCount % 3 == 2)	_str = _str.replace("%s", getString(R.string.str_wait3));
			} else {
				_str = mDVDDeckVer;
			}
			mTV_deck.setText(_str);
		}
	}
	
	Handler mHandlerOKEnable = new Handler();
	Runnable mRunnableOKEnable = new Runnable() {
		@Override
		public void run() {
			// TODO Auto-generated method stub
			mResultOK.setEnabled(true);
		}
	};
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		
//		Intent _intent = new Intent(FILTER_GET_VERSION);
//		sendBroadcast(_intent);
		mDVDFWVer = getString(R.string.str_dvd_fw_ver);
		mDVDFWVer = mDVDFWVer.replace("%s", "");
		
		mDVDDeckVer = getString(R.string.str_dvd_deck_fw_ver);
		mDVDDeckVer = mDVDDeckVer.replace("%s", "");
		
		mTV_deck.setVisibility(View.VISIBLE);
		mUpdateVer();
		
		MainActivity.getInstace().setDVDEventListener(this);
		mRetryCount = -1;
		mRetryHandler.postDelayed(mRetryRunnable, 1);
		
		mHandlerOKEnable.postDelayed(mRunnableOKEnable, _DEFINE.OK_ENABLE_TIME);
	}
	
	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		mHandlerOKEnable.removeCallbacks(mRunnableOKEnable);
		MainActivity.getInstace().setDVDEventListener(null);
		mRetryHandler.removeCallbacks(mRetryRunnable);
		super.onPause();
	}
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
//		super.onBackPressed();
	}
	
	@Override
	public void onDVDKeyState(String key, String action) {
		// TODO Auto-generated method stub
	}
	@Override
	public void onDVDFWVer(String value) {
		// TODO Auto-generated method stub
		mReceive += 1;
		if(mReceive >= RECEIVE_MAX_COUNT)	mRetryHandler.removeCallbacks(mRetryRunnable);
		mDVDFWVer = getString(R.string.str_dvd_fw_ver);
		mDVDFWVer = mDVDFWVer.replace("%s", value.trim());
		mTV_fw.setTextColor(_DEFINE.mYellowGreen);
		
		mFWVersionSuccess = true;
		mUpdateHandler.postDelayed(mUpdateRunnable, 1);
	}
	@Override
	public void onDVDDeckVer(String value) {
		// TODO Auto-generated method stub
		mReceive += 1;
		if(mReceive >= RECEIVE_MAX_COUNT)	mRetryHandler.removeCallbacks(mRetryRunnable);
		mDVDDeckVer = getString(R.string.str_dvd_deck_fw_ver);
		mDVDDeckVer = mDVDDeckVer.replace("%s", value.trim());
		mTV_deck.setTextColor(_DEFINE.mYellowGreen);
		mDeckVersionSuccess = true;
		mUpdateHandler.postDelayed(mUpdateRunnable, 1);
	}
}
