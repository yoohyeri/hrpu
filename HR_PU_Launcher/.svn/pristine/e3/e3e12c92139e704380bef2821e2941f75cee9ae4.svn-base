package com.mobilusauto.app.productionprocess.receiver;

import com.mobilusauto.app.productionprocess.DEBUG_;
import com.mobilusauto.app.productionprocess.USBActivity;
import com.mobilusauto.app.productionprocess._DEFINE;

import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.HMSIntent;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.wifi.WifiManager;
import android.os.Handler;
import android.util.Log;

/**
 * @Project	: R1PDrivingInfo
 * @Package : com.hms.r1p.drivinginfo.receiver
 * @Name	: RCV_Mounted.java
 * @Author	: hlson@hitecms.co.kr
 * @Date	: 2016. 5. 26.
 * @Description	: 
 */
public class usb_state extends BroadcastReceiver {
	Context mContext;
	String mUSBFileName = "!자@동$모&드(진^입.acd";
	String mUSBFileName1 = "!자@동$모&드(진^입_cheonan.acd";
	@Override
	public void onReceive(Context context, Intent intent) {
		if(intent != null) {
			mContext =  context;
			String _action = intent.getAction();
			if(_action.equals(Intent.ACTION_MEDIA_MOUNTED)) {
	        	USBActivity.mSetUSBState(true);			
	        	
	        	if(DEBUG_.isFile(mUSBFileName) || DEBUG_.isFile(mUSBFileName1)) {
		        	//Run ProductionProcess
					new Handler().postDelayed(new Runnable() {
						@Override
						public void run() {
							// TODO Auto-generated method stub
							try{
								Intent _intent;
								Intent _gIntent = mContext.getPackageManager().getLaunchIntentForPackage("com.mobilusauto.app.productionprocess");
								_intent = new Intent(Intent.ACTION_MAIN);
								if(DEBUG_.isFile(mUSBFileName))	_intent.putExtra("_key", _DEFINE.NAME_MG);
								else							_intent.putExtra("_key", _DEFINE.NAME_CHEONAN);
								_intent.addCategory(Intent.CATEGORY_LAUNCHER);
								ComponentName _componentName = new ComponentName(_gIntent.getPackage(), _gIntent.getComponent().getClassName());
								if(_componentName == null)
									return;
								
								_intent.setComponent(_componentName);
								_intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);
							
								mContext.startActivity(_intent);
							}catch (Exception e) {
								e.printStackTrace();
							}
						}
					}, 1);
	        	}
	        } else if(_action.equals(Intent.ACTION_MEDIA_UNMOUNTED)) {        
	        	USBActivity.mSetUSBState(false);			
	        } else if(_action.equals(Intent.ACTION_MEDIA_UNMOUNTABLE)) {
	        	USBActivity.mSetUSBState(false);								
	        } 
		}
	}
}