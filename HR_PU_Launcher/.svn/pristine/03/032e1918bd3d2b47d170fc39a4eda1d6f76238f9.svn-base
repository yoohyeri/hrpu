package com.mobilus.hp.rearcamera;

import android.annotation.SuppressLint;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.PixelFormat;
import android.os.IBinder;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import android.os.IMTX;
import android.os.ServiceManager;
import android.os.SystemProperties;

public class RearCameraService extends Service {

	private final String TAG = "HP-Rear Camera Service";
	
	private FrameLayout fCameraPreview;
	private CameraPreview mCameraPreview;
    private TextView imgParkingLine;
    public static RelativeLayout msgReboot;
    private CustomTextView mNotiMsg;
    
    private View mView;
    private WindowManager mWindowManager;
    private WindowManager.LayoutParams  mParams;
    
    public static final IMTX M_MTX = IMTX.Stub.asInterface(ServiceManager.getService("motrex"));
    
	@Override
	public void onCreate() {
		super.onCreate();

		Log.i(TAG, "Reverse > onCreate() 0626 -1");
		
		try {
			M_MTX.writeGPIO((byte)0xa8, (byte)0x1);
		}
		catch (Exception e) {
			// TODO: handle exception
		}
			
		mSetRearCameraView();
		onSetRearCamera();
		
//		registerReceiver();
	}
	
//	private BroadcastReceiver mReceiver;
	
//	private void registerReceiver() {
//		
//		Log.i(TAG, "Reverse > registerReceiver()");
//		
//		final IntentFilter intentfilter = new IntentFilter();
//		intentfilter.addAction("android.intent.action.MEDIA_UNMOUNTED");
//		intentfilter.addAction("android.intent.action.MEDIA_MOUNTED");
//
//
//		this.mReceiver = new BroadcastReceiver() {
//
//			@Override
//			public void onReceive(Context arg0, Intent intent) {				
//				if (intent.getAction().equals("android.intent.action.MEDIA_UNMOUNTED")) {
//					Log.i(TAG, "MEDIA_UNMOUNTED // navigation : " + SystemProperties.getBoolean("mtx.system.navigation", false));
//					if(SystemProperties.getBoolean("mtx.system.navigation", false)) {
//						msgReboot.setVisibility(View.VISIBLE);
//					}
//				} 	
//				else if(intent.getAction().equals("android.intent.action.MEDIA_MOUNTED")) {
//					Log.i(TAG, "MEDIA_MOUNTED // navigation : " + SystemProperties.getBoolean("mtx.system.navigation", false));
//				
//				}
//			}
//		};
//		this.registerReceiver(this.mReceiver, intentfilter);
//	}

//	private void unregisterReceiver() {
//		if (mReceiver != null) {
//			this.unregisterReceiver(mReceiver);
//			mReceiver = null;
//		}
//	}
	
	@Override
	public void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		
		Log.d(TAG, "====================>>> onDestroy");
		// Stop Preview
		if(mCameraPreview != null) {
			fCameraPreview.removeView(mCameraPreview);
			mCameraPreview.mCameraClose();
			mCameraPreview = null;
		}
		
//		unregisterReceiver();
	}
	
	private void onSetRearCamera()
    {		
		Log.d(TAG, "onSetMapLoadingPopup");
		if(mWindowManager == null)
			mWindowManager = (WindowManager) getSystemService(WINDOW_SERVICE);
		mParams = new WindowManager.LayoutParams(
				WindowManager.LayoutParams.FILL_PARENT,
				WindowManager.LayoutParams.FILL_PARENT,
		        WindowManager.LayoutParams.TYPE_PHONE, // 항상 최상위로
		        WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL,
		        PixelFormat.TRANSLUCENT);
		mParams.x = 0;
		mParams.y = 0;
//		mSetRearCameraView();
		mWindowManager.addView(mView, mParams);	
    }

	private void mSetRearCameraView()
    {	
		LayoutInflater mInflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		mView = mInflater.inflate(getApplicationContext().getResources().getLayout(R.layout.camera_layout), null);
		
		mCameraPreview = new CameraPreview(this.getApplicationContext());
		fCameraPreview = (FrameLayout)mView.findViewById(R.id.fCameraPreview);
		
		if(SystemProperties.get("mtx.system.vendor", "kia").equals("kia")) {
			imgParkingLine = (TextView) mView.findViewById(R.id._k_parking_line);
		}
		else {
			imgParkingLine = (TextView) mView.findViewById(R.id._h_parking_line);
		}
		
		if (fCameraPreview.getChildCount() == 0)
			fCameraPreview.addView(mCameraPreview);
		
		if(!MainActivity.mShowGuideLine)
			imgParkingLine.setVisibility(View.GONE);
		else 
			imgParkingLine.setVisibility(View.VISIBLE);
		
		msgReboot = (RelativeLayout)mView.findViewById(R.id.msg_reboot);
		msgReboot.setVisibility(View.INVISIBLE);
		
		
		//mSetNaviShow(false);
    }
	
	@SuppressLint("NewApi")
	public void mSetNaviShow(boolean visible) {
		int option = fCameraPreview.getSystemUiVisibility();	
				
		if(visible) {
			option &= ~(View.SYSTEM_UI_FLAG_LAYOUT_STABLE
					| View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
					| View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
					| View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
					| View.SYSTEM_UI_FLAG_FULLSCREEN
					| View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);	
		}
		else {
			option |= View.SYSTEM_UI_FLAG_LAYOUT_STABLE
					| View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
					| View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
					| View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
					| View.SYSTEM_UI_FLAG_FULLSCREEN
					| View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
		}
		
		fCameraPreview.setSystemUiVisibility(option);
		
//		if(visible) {
//			getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);
//		}
//		else {
//			getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
//		}
	}

	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		Log.d(TAG, "onBind");
		return null;
	}
	
	@Override
	public boolean stopService(Intent name) {
		if(mCameraPreview != null) {
			fCameraPreview.setVisibility(View.INVISIBLE);
			fCameraPreview.removeView(mCameraPreview);
			mCameraPreview.mCameraClose();
			mCameraPreview = null;
		}
		return super.stopService(name);
	}
}
