package com.mobilusauto.app.productionprocess;

import java.io.IOException;
import android.content.Context;
import android.hardware.Camera;
import android.hardware.Camera.CameraInfo;
import android.os.Handler;
import android.util.Log;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

public class CameraPreview extends SurfaceView implements SurfaceHolder.Callback {
	
	private final String TAG = "YP-RSE HDMI";
	
	private Camera mCamera = null;
    private SurfaceHolder mHolder;
    
    private boolean mIsCameraOpen = false;
    
    SurfaceHolder mSurfaceHolder = null;
    
    private int mCameraType;
    
    
    
	@SuppressWarnings("deprecation")
	public CameraPreview(Context context, int type)  {
		super(context);
		mHolder = getHolder();
		mHolder.addCallback(this);
		mHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);	
		
		mCameraType = type;
	}

	@Override
	public void surfaceCreated(SurfaceHolder surfaceHolder)  {
		mSurfaceHolder = surfaceHolder;
		new Handler().postDelayed(new Runnable() {
			@Override
			public void run() {
				// TODO Auto-generated method stub
				if(mCamera != null && mIsCameraOpen) {
					mSetPreviewDisplay();
				}
			}
		}, 1);
//		// Surface媛� �깮�꽦 --> �봽?��?�럭?���? �뼱�뵒�뿉 �쓣�슱吏� 吏��젙�빐以��떎. (Holder濡� 諛쏆�? SurfaceHolder�뿉 ?��?��?��以��떎.)
//		try {
//			/*
//			 * Camera Open �븷�븣 ID?���? 吏��젙�븯�뒗 寃껋�? �뵲�씪 CPU�쓽 CIF�룷�듃?���? �삤�뵂�븳�떎.
//			 * Camera ID媛� CameraInfo.CAMERA_FACING_FRONT(1)�씪 寃쎌?�� HDMI �쁺�긽?��?��?��
//			 * Camera ID媛� CameraInfo.CAMERA_FACING_BACK(0)�씪 寃쎌?�� TW9910?����?���맂 DVD, AV-In �쁺�긽?��?��?��
//			 */
//			mCamera = Camera.open(CameraInfo.CAMERA_FACING_BACK);
//			mIsCameraOpen = true;
//		} catch (RuntimeException e) {
//			// TODO: handle exception
//		}
//		
//		try  {
//			mCamera.setPreviewDisplay(surfaceHolder);
//		} catch (IOException e) {
//			mIsCameraOpen = false;
//			Log.d(TAG, "Error setting camera preview" + e.getMessage());
//            mCamera.release();
//            mCamera = null;            
//		} catch(NullPointerException ne) {
//			Log.d(TAG, "Error setting camera preview" + ne.getMessage());
//		}
	}

	@Override
	public void surfaceChanged(SurfaceHolder surfaceHolder, int format, int width, int height)  {
//		//Log.d("camera", "[1] width : " + width + ", height" + height);
//		// �봽?��?�럭?���? �쉶�쟾�떆�궎嫄곕�? 蹂�寃� �떆 泥섎?��?���?  �뿬湲곗�? �빐以��떎.
//        // �봽?��?�럭 蹂�寃쎌?���뿉�뒗 ?��?���? �봽?��?�럭?���? 硫덉?���떎�쓬 蹂�寃�?빐��? �븳�떎.
//        if(mHolder.getSurface() == null) {
//            // �봽?��?�럭媛� 議댁?���븯吏� �븡�쓣 �븣
//            return;
//        }
//        
//        // �봽?��?�럭媛� 議댁?���븯硫� �슦�꽑 硫덉?���떎.
//        try {
//            mCamera.stopPreview();
//        } 
//        catch (Exception e) {
//            // �봽?��?�럭媛� 議댁?��議곗�? �븯吏� �븡�뒗 寃쎌?��
//        }
//        
//        // �봽?��?�럭 蹂�寃�, 泥섎?�� �벑�쓣 �뿬湲곗�? �빐以��떎.
//        Camera.Parameters parameters;
//        try {
//        	parameters = mCamera.getParameters();
//		} catch (NullPointerException e) {
//        	Log.d(TAG, "Error starting camera preview: " + e.getMessage());
//			return;
//		}
//        
//        Log.d(TAG, "width : " + parameters.getPreviewSize().width + ", height : " + parameters.getPreviewSize().height);
//
//        mCamera.setParameters(parameters);
//
//        // �깉濡� 蹂�寃쎈�? �꽕�젙�쑝濡� �봽?��?�럭?���? �옱�깮�꽦�븳�떎.
//        try {
//            mCamera.setPreviewDisplay(surfaceHolder);
//            mCamera.startPreview();
//        } catch (Exception e) {
//        	Log.d(TAG, "Error starting camera preview: " + e.getMessage());
//        }
		
		mSurfaceHolder = surfaceHolder;
		new Handler().postDelayed(new Runnable() {
			@Override
			public void run() {
				if(mCamera != null && mIsCameraOpen) {
			        if(mHolder.getSurface() == null) {
			            return;
			        }
			        try {
			            mCamera.stopPreview();
			        } 
			        catch (Exception e) {
			        }
			        
			        Camera.Parameters parameters;
			        try {
			        	parameters = mCamera.getParameters();
					} catch (NullPointerException e) {
			        	Log.d(TAG, "Error starting camera preview: " + e.getMessage());
						return;
					}
			        
			        mCamera.setParameters(parameters);
			        try {
			            mCamera.setPreviewDisplay(mSurfaceHolder);
			            mCamera.startPreview();
			        } catch (Exception e) {
			        	Log.d(TAG, "Error starting camera preview: " + e.getMessage());
			        }
				}
			}
		}, 1);
	}

	@Override
	public void surfaceDestroyed(SurfaceHolder holder)  {
		// �봽?��?�럭 �젣嫄곗?�� 移�?찓�?�� �궗�슜�룄 �걹�궗�떎?�� 媛꾩＜��?�뿬 ?��?�냼�뒪?���? �쟾?���? 諛섑?��
		if(mCamera != null && mIsCameraOpen) {
			mIsCameraOpen = false;
            mCamera.stopPreview();
            mCamera.release();
            mCamera = null;
        }
	}
	
	public void mCameraOepn() {	
		try {
			if(mCameraType == DEBUG_.CAMERA_AV)			mCamera = Camera.open(CameraInfo.CAMERA_FACING_BACK);
			else if(mCameraType == DEBUG_.CAMERA_HDMI)	mCamera = Camera.open(CameraInfo.CAMERA_FACING_FRONT);
			else if(mCameraType == DEBUG_.CAMERA_DVD)	mCamera = Camera.open();			
			mIsCameraOpen = true;
		} catch (RuntimeException e) {
			// TODO: handle exception
		}
		
		mSetPreviewDisplay();
	}
	private void mSetPreviewDisplay() {
		if(mSurfaceHolder == null)  return;
		try  {
			mCamera.setPreviewDisplay(mSurfaceHolder);
			mCamera.startPreview();
		} catch (IOException e) {
			mIsCameraOpen = false;
            mCamera.release();
            mCamera = null;            
		} catch(NullPointerException ne) {
		}
	}
	public void mCameraClose() {
		if(mCamera != null && mIsCameraOpen) {
			mIsCameraOpen = false;
            mCamera.stopPreview();
            mCamera.release();
            mCamera = null;
        }
	}
	public boolean mIsCameraOpen() {
		return mIsCameraOpen;
	}
}
