/*
 * Copyright 2009 Cedric Priscal
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */

package android_serialport_api.sample;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.InvalidParameterException;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android_serialport_api.HMSUartProtocol;
import android_serialport_api.SerialPort;
import android_serialport_api.ThreadRead;
import android_serialport_api.ThreadWrite;

public class MainMenu extends Activity {
	//kslee
	protected Application mApplication;
	protected SerialPort mSerialPort;
	protected OutputStream mOutputStream;
	private InputStream mInputStream;
	private MThreadRead mThreadRead;
	private ThreadWrite mThreadWrite;
	
//	
//	onSt
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        this.startService(new Intent(this,ServiceUart.class));
        finish();

        final Button buttonSetup = (Button)findViewById(R.id.ButtonSetup);
        buttonSetup.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				startActivity(new Intent(MainMenu.this, SerialPortPreferences.class));
			}
		});

        final Button buttonConsole = (Button)findViewById(R.id.ButtonConsole);
        buttonConsole.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				startActivity(new Intent(MainMenu.this, ConsoleActivity.class));
			}
		});

        final Button buttonLoopback = (Button)findViewById(R.id.ButtonLoopback);
        buttonLoopback.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				startActivity(new Intent(MainMenu.this, LoopbackActivity.class));
			}
		});

        final Button button01010101 = (Button)findViewById(R.id.Button01010101);
        button01010101.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				startActivity(new Intent(MainMenu.this, Sending01010101Activity.class));
			}
		});

        final Button buttonAbout = (Button)findViewById(R.id.ButtonAbout);
        buttonAbout.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				AlertDialog.Builder builder = new AlertDialog.Builder(MainMenu.this);
				builder.setTitle("About");
				builder.setMessage(R.string.about_msg);
				builder.show();
			}
		});

        final Button buttonQuit = (Button)findViewById(R.id.ButtonQuit);
        buttonQuit.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				MainMenu.this.finish();
			}
		});
        
//        //kslee
//		mApplication = (Application) getApplication();
//		try {
//			mSerialPort = mApplication.getSerialPort();
//			
//			mOutputStream = mSerialPort.getOutputStream();
//			mInputStream = mSerialPort.getInputStream();
//			/* Create a receiving thread */
//			mThreadRead = new MThreadRead(mSerialPort);
//			mThreadRead.start();
//			
//			mThreadWrite = new ThreadWrite(mSerialPort);
////			mThreadRead.start();
//		} catch (SecurityException e) {
////			DisplayError(R.string.error_security);
//		} catch (IOException e) {
////			DisplayError(R.string.error_unknown);
//		} catch (InvalidParameterException e) {
////			DisplayError(R.string.error_configuration);
//		}

//		mHandler.postDelayed(mRunnable, 1000);
    }
    
//    Handler mHandler = new Handler();
//    Runnable mRunnable = new Runnable() {
//		
//		@Override
//		public void run() {
//			// TODO Auto-generated method stub
//			mThreadWrite.mSendData((byte)1, (byte)1);
//			mHandler.postDelayed(mRunnable, 1000);
//		}
//	};
    
    public class MThreadRead extends ThreadRead {
		public MThreadRead(SerialPort _sPort) throws SecurityException, IOException {
			super(_sPort);
			Log.d("debug", "=>> Main MThreadRead");
		}

		@Override
		protected void onDataReceived(byte _cmd1, byte cmd2, byte[] buffer)
		{
			Log.d("debug", "=>> onReceived : " + buffer);
			if(cmd2 == HMSUartProtocol.CMD2_SET_SERIAL) {
				mThreadWrite.mSendData(cmd2,cmd2,  HMSUartProtocol.CMD_VALUE_SUCCESS);
			} if(cmd2 == HMSUartProtocol.CMD2_SET_CAS_ID) {
				mThreadWrite.mSendData(cmd2, cmd2,HMSUartProtocol.CMD_VALUE_SUCCESS);
			}
		}
	}
}

